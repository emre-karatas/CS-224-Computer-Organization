CS224
Lab 01
Section 03
Emre Karata≈ü
22001641
06.10.2022

-Swap Array Elements-
.data
	array : .space 80
	array2: .space 80
	question: .asciiz "\nEnter array size: (max 20) "
	arraySize: .word 0
	seperator: .asciiz " " 
	exp: .asciiz "\nafter reversing: " 
	arrayExp: .asciiz "Array is: "
	opening: .asciiz "----Array Swapper ----"
.text
main:
	#opening message
	li $v0,4
	la $a0,opening
	syscall	
	
	#array loading
	la $t0,array
	#counter = 0
	addi $t1,$zero,0 
	
	#printing
	li $v0,4
	la $a0,question
	syscall	
	
	#getting the input from user
	li $v0, 5
	syscall
	sw $v0,arraySize
	
	#starting loop
	bgt $v0,$zero,loop
	
loop: 
	#getting array inputs
	lw $t2,arraySize
	li $v0,5
	syscall
	sw $v0,0($t0)
	addi $t0,$t0,4
	addi $t1,$t1,1
	
	#loop condition
	blt $t1,$t2,loop
	
	#next instruction
	jal printingArray
	jr $ra
	
printingArray:
	la $t0,array
	lw $t2,arraySize
	# counter equal to 0
	addi $t1,$zero,0
	#array message
	li $v0,4
	la $a0,arrayExp
	syscall	
	
	#printing the array
	continue:
		lw $a0,0($t0)
		addi $t0,$t0,4
		li $v0,1
		syscall
		la $a0,seperator
		li $v0,4
		syscall
	
	#counter
	addi $t1,$t1,1
	blt $t1,$t2,continue
	addi $t0,$t0,4
	
	#next step
	jal reversing
	jr $ra
reversing:
	la $a0,0($t0)
	la $t4,array
	
	#matching t0 and t4 elements by temp values(t5,t6)
	swapping:
		lw $t5,0($t0)
		lw $t6,0($t4)
		
		sw $t5,0($t4)
		sw $t6,0($t0)
		
		#increase and decrease the address
		addi $t4,$t4,4
		addi $t0,$t0,-4
		
		#loop condition
		bgt $t0,$t4,swapping
	#loading array size
	la $a0,0($t2)
	addi $t1,$zero,0
	
	#explanation
	li $v0,4
	la $a0,exp
	syscall	
	
	#printing reverse array
	while:
		lw $a0,0($t4)
		addi $t4,$t4,4
		
		#message
		li $v0,1
		syscall
		
		la $a0,seperator
		li $v0,4
		syscall
		
		addi $t1,$t1,1
		#loop condition
		blt $t1,$t2,while
	#exiting
	li $v0,10
	syscall
	jr $ra

----Arithmetic Expression----

.data

	questionValueB : .asciiz "Enter B value: "
	questionValueC: .asciiz "Enter C value: "
	questionValueD: .asciiz "Enter D value: "
	b: .word 0
	c: .word 0
	d: .word 0
	divisionResult: .word 0
	mod: .word
	remainder: .word 0
	result: .asciiz "A =  " 
	prompt : .asciiz "Solution of A = (B/C+D*B-C) MOD B \n"


.text
	#prompt 
	li $v0,4
	la $a0,prompt
	syscall
	
	#getting user input B
	li $v0,4
	la $a0,questionValueB
	syscall
	li $v0,5
	syscall
	sw $v0,b
	
	#getting user input C
	li $v0,4
	la $a0,questionValueC
	syscall
	li $v0,5
	syscall
	sw $v0,c
	
	#getting user input D
	li $v0,4
	la $a0,questionValueD
	syscall
	li $v0,5
	syscall
	sw $v0,d
	
	#loading values
	lw $t0,b
	lw $t1,c
	lw $t2,d
	
	#division operation
	jal division
	move $a0,$t3
	
	#load b again
	lw $t0,b
	
	#operations
	sub $t5,$v0,$t1
	mul $t6,$t2,$t0
	add $t7,$t6,$t5
	
	
	#setting values for 2nd division
	move $t1,$t0
	move $t0,$t7
	jal division
	
	#displaying result
	jal display
	
	#result printing
	move $a0,$t4
	li $v0,1
	syscall
	
	#exiting
	li $v0,10
	syscall

division:
	#initializing values
	add $t3,$zero,1
	addi $t4,$zero,0
	loop:
		sub $t0,$t0,$t1
		sub $t4,$t0,$t1
		#division counter
		add $t3,$t3,1
		
		#loop conditions
		blt $t4,$zero,done
		beq $t4,$zero,done
		bgt $t4,$zero,loop
	done:
	#getting the last value before 0
	add $t4,$t4,$t1	
	
	#saving values
	sw $t3,divisionResult
	sw $t4,remainder
	jr $ra
display:
	#result prompt
	li $v0,4
	la $a0,result
	syscall
	jr $ra
